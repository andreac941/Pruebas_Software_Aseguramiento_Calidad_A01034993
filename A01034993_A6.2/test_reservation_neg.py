# -*- coding: utf-8 -*-
"""test_reservation_neg.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E9KQyl4A8RRdvuhk78nnkSfnMB41eZWL
"""

import unittest
from hotel_management import Hotel, Reservation, Customer


class TestReservationNegativeCases(unittest.TestCase):
    def setUp(self):
        self.customer = Customer("John Doe", "john@example.com", "123456789")
        self.hotel = Hotel("Test Hotel", "Test Location", 10)
        self.reservation = Reservation(self.customer, self.hotel, room_number=1, start_date="2024-02-20", end_date="2024-02-25")

    def test_create_reservation_invalid_start_date(self):
        # Try to create a reservation with an invalid start date
        with self.assertRaises(ValueError) as context:
            Reservation.create_reservation(self.customer, self.hotel, room_number=1, start_date="2023-02-20", end_date="2024-02-25")
        self.assertEqual(str(context.exception), "Invalid start date. Start date must be in the future.")

    def test_create_reservation_invalid_end_date(self):
        # Try to create a reservation with an invalid end date
        with self.assertRaises(ValueError) as context:
            Reservation.create_reservation(self.customer, self.hotel, room_number=1, start_date="2024-02-20", end_date="2024-01-25")
        self.assertEqual(str(context.exception), "Invalid end date. End date must be in the future and after the start date.")

    def test_cancel_reservation_already_canceled(self):
        # Try to cancel a reservation that has already been canceled
        self.reservation.cancel_reservation()
        with self.assertRaises(ValueError):
            self.reservation.cancel_reservation()


if __name__ == '__main__':
    unittest.main()